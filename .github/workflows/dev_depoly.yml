name: CI/CD Pipeline

on:
  push:
    branches: [ develop ]  # develop 브랜치에 push 시 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4  # 저장소 코드 체크아웃

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make application.yml
        run: |
          cd ./src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > ./application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Rename and Upload build artifact
        run: |
          mkdir -p upload
          cp $(find build/libs -name '*.jar' ! -name '*plain.jar' | head -n 1) upload/grabPT.jar
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          name: grabPT
          path: upload/grabPT.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: grabPT
          path: .

      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem

          # JAR 파일만 업로드 (env.properties는 제외)
          scp -i private_key.pem -o StrictHostKeyChecking=no grabPT.jar $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/grabPT.jar

          # EC2 서버에서 실행 (env.properties는 EC2에 이미 존재한다고 가정)
          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "
            pgrep java | xargs -r kill -15
            sleep 10
            nohup java -Dspring.config.import=optional:file:.env.properties -jar /home/$EC2_USERNAME/grabPT.jar > app.log 2>&1 &
          "

          rm -f private_key.pem
  
