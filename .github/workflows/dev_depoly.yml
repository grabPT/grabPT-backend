name: CI/CD Pipeline for Develop

on:
  push:
    branches: [ develop ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      ENV_PROPERTIES: ${{ secrets.ENV_PROPERTIES }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Create SSH key file
        run: |
          echo "$EC2_SSH_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Deploy to EC2
        run: |
          echo "$EC2_SSH_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem
          
          # 전송 (JAR 이름 명확히 지정)
          scp -i ec2_key.pem -o StrictHostKeyChecking=no build/libs/grabpt-0.0.1-SNAPSHOT.jar $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/app.jar
          scp -i ec2_key.pem -o StrictHostKeyChecking=no .env.properties $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/.env.properties
          
          # 실행
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST << 'EOF'
            pkill -f 'java' || true
            sleep 5
            cd /home/$USER
            nohup java -Dspring.config.import=optional:file:.env.properties -jar app.jar > app.log 2>&1 &
          EOF

      - name: Clean up SSH key
        run: rm -f ec2_key.pem
